<?php
/**
 * @file
 *
 * This module handles the authentication of user when required by Ezproxy.
 *
 * When user are correctly authenticated the control are returned to Ezproxy
 * with construct of a Ticket-url.
 */

define('TING_EZPROXY_AUTHENTICATION_URL', 'ezproxy_authentication');

/**
 * Implements hook_menu().
 */
function ting_ezproxy_menu() {
  $items = array();

  $items['admin/settings/ting/ezproxy'] = array(
    'title' => 'Ezproxy settings',
    'description' => 'Configure EZProxy authenticaton',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ting_ezproxy_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'ting_ezproxy.admin.inc',
    'weight' => 10,
  );

  $items[TING_EZPROXY_AUTHENTICATION_URL] = array(
    'title' => 'Ezproxy authentication',
    'description' => 'EZProxy menu callback to handle authentication',
    'page callback' => 'ting_ezproxy_handler',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu callback that handles authentication of the current logged in users.
 */
function ting_ezproxy_handler() {
  global $user;

  // Get config values.
  $config_values = variable_get('ting_ezproxy', array());

  if (user_is_anonymous()) {
    // Get text and replace token.
    $text = strtr($config_values['text_anonymous'], array('@loginform' => drupal_get_form('user_login')));
  }
  else {
    // User is now logged in.
    $status = get_user_current_status($config_values['category'], $config_values['block']);

    if ($status) {
      // All okay - construct ticket.

      // Get url from ezproxy
      // The content will be encoded in The Ezproxy-way eg. "ezp.2aH...s-" -
      // it's not a real url in this context.
      $url = $_GET['url'];

      // We should use a non-critical id on the user to the ezproxylog
      // @TODO: do a MD5 hash on uid with some random number and save the
      // connection uid/ezproxy_userid in watchdog.
      $ezproxy_userid = $user->uid;

      // Make the ezproxy url with ticket.
      $url_redirect  = make_ezproxy_url($config_values['domain'], $config_values['secret'], $ezproxy_userid, $config_values['citizen'], $url);

      $waittime = intval($config_values['loggedin_time']);
      if ($waittime == 0) {
        drupal_goto($url_redirect);
      }
      else {
        // Get text and replace token with url.
        $text = strtr($config_values['text_loggedin'], array('@tokenurl' => $url_redirect));

        if ($waittime > 0) {
          drupal_set_html_head('<meta http-equiv="refresh" content="' . $waittime . ';url=' . $url_redirect . '">');
        }
      }
    }
    elseif ($status === FALSE) {
      // Blocked or other error.
      $text = $config_values['text_error'];
    }
    else {
      // Wrong category.
      $text = $config_values['text_wrongcategory'];
    }
  }
  return '<div class="ting-ezproxy">' . $text . '</div>';
}

/**
 * Get the state of the user.
 *
 * @return mixed
 *   1: user have the correct category
 *   0: user have a wrong category
 *   FALSE: some other error eg. blocked card, no connection to ding_provider,
 *          user is not alma_user
 */
function get_user_current_status($category, $block) {
  global $user;

  $creds = ding_library_user_get_credentials($user);
  if ($creds != DING_PROVIDER_AUTH_REQUIRED) {
    $user_data = alma_client_invoke('get_patron_info', $creds['user_id'], $creds['password'], TRUE);
  }

  // If no data? - then return FALSE,
  if (!isset($user_data["category"])) {
    return FALSE;
  }

  // Have the user some blocks then vi return FALSE if this... ?
  if (isset($user_data["blocks"]) && strlen($block)) {
    $block_list = explode(',', $block);
    $regexp = '/^(' . implode('|', preg_grep('/^\w+$/', $block_list)) . ')$/';
    foreach ($user_data["blocks"] as $ele) {
      if (!$ele['is_system'] && preg_match($regexp, $ele['code'])) {
        return FALSE;
      }
    }
  }

  // Make the regexp with allowed categories and check this.
  $catlist = explode(',', $category);
  $regexp = '/^(' . implode('|', preg_grep('/^\w+$/', $catlist)) . ')$/';

  return preg_match($regexp , $user_data["category"]);
}

/**
 * Make the Ezproxy-ticket.
 *
 * From the documentation for Ezproxy
 * http://www.oclc.org/support/documentation/ezproxy/usr/ticket/php.htm
 */
function make_ezproxy_url($ez_proxy_server_url, $secret, $user, $groups = "", $url = "") {
  $packet = '$u' . time();
  if (strcmp($groups, "") != 0) {
    $packet .= '$g' . $groups;
  }
  $packet .= '$e';
  $ez_proxy_ticket = urlencode(md5($secret . $user . $packet) . $packet);

  return $ez_proxy_server_url . "/login?user=" . urlencode($user) . "&ticket=" . $ez_proxy_ticket . "&qurl=" . urlencode($url);
}
